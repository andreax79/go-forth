http://www.forth.org/Ting/Forth-for-the-Complete-Idiot/Forth-79-Handy-Reference.pdf
https://people.ece.cornell.edu/land/courses/ece5760/DE2/Stack_cpu.html

- forth
  - nice syntax [OK]
  - forth comments [OK]
  - loop [OK]
  - forth definitions

- assembler
  - variables [OK]
  - 2 pass compiler [OK]
  - asciiz [OK]
  - word/bytes

- cpu
  - map registers ram?
  - interrupt
  - mmu (virtual memory) [OK]


------------------------------------------------------------------------------------------------
- call/ret ==> accesso variabili 'globali' ?
- I/O = emit
- relative jump

------------------------
Before subcall execution

- caller local var
- caller stack
- arguments
- fn addr

------------------------
During subcall execution

- caller local var
- caller stack
- arguments

- address to return <---- $data ($fp)
- value of $data in the caller
- local var
- stack <- $sp

